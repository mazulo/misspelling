#!/usr/bin/env python

"""
Checks files against a list of commonly misspelled words.

Wikipedia contains a large number of proper nouns and technical
terms. Traditional spell-checking in this case is problematic.
Instead, it has a page that people can use to list commonly misspelled
words and to then use that to find misspellings.

A similar approach can be taken to spell-checking (or misspell-checking)
the files in a body of source code.

This tool uses the English wordlist from Wikipedia in order to scan
source code and identify misspelled words.
"""

import codecs
import sys
from typing import Optional

from misspellings_lib.misspellings import Misspellings
from utils import (
    MisspellingArgumentParser,
    parse_file_list,
    expand_directories,
)


def main() -> Optional[int]:
    """Internal main entry point."""
    parser = MisspellingArgumentParser()
    args = parser.parse_args()

    if args.file_list:
        try:
            args.files += parse_file_list(args.file_list)
        except IOError as exception:
            parser.error(exception)

    output = codecs.getwriter('utf-8')(
        sys.stdout.buffer if hasattr(sys.stdout, 'buffer') else sys.stdout
    )

    if args.misspelling_file:
        misspelling = Misspellings(misspelling_file=args.misspelling_file.as_posix())
        args.files = expand_directories(args.files)

        if args.export_file:
            filename = args.export_file
            with open(filename, 'w', encoding='utf-8') as correction_file:
                misspelling.export_result_to_file(filenames=args.files, output=correction_file)
    elif args.json_file:
        misspelling = Misspellings(misspelling_json_file=args.json_file.as_posix())
        args.files = expand_directories(args.files)

        if args.export_file:
            filename = args.export_file.as_posix()
            with open(filename, 'w', encoding='utf-8') as correction_file:
                misspelling.export_result_to_file(filenames=args.files, output=correction_file)
    else:
        misspelling = Misspellings()
        args.files = expand_directories(args.files)

        if args.export_file:
            filename = args.export_file.as_posix()
            with open(filename, 'w', encoding='utf-8') as correction_file:
                misspelling.export_result_to_file(filenames=args.files, output=correction_file)

    if args.dump_misspelling:
        for word, correction in misspelling.dump_misspelling_list():
            output.write('%s %s\n' % (word, correction))

    if args.script_output:
        misspelling.output_sed_script(parser, args, filenames=args.files)
    else:
        return (
            2 if misspelling.output_normal(filenames=args.files, output=output) else 0
        )

if __name__ == '__main__':
    sys.exit(main())
